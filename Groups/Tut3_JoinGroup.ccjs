// Tut3_JoinGroup() - add myself to the specified group

// Retrieve the parameter
var groupId = data.groupId;
var memberId = data.memberId;

var results = {};

var apiStatus;

// Grab the Global Entity and User Entity service proxies
var globalEntityService = bridge.getGlobalEntityServiceProxy();
var userEntityService = bridge.getEntityServiceProxy();

// Retrieve the Group
var group = globalEntityService.readEntity(groupId).data;

// Confirm that we found it and that it's a group
if ( (group !== null) && (group.entityType == "group") ) {
    
    // Add a new member to the group
    var memberRecord = {};
    memberRecord["profileId"] = memberId;
    
    // Storing the members in a map is a bit more flexible than an array
    group.data.members[memberId] = memberRecord;
    
    // Write the updated group
    apiStatus = globalEntityService.updateEntity(groupId, group.version, group.data);
    if (apiStatus.status == 200) {
        
         // Store a reference from the user to the group in a user entity
        var userRefToGroup = {};
        userRefToGroup["groupId"] = groupId;
        
        // Update via the singleton API - the entity will be created if it 
        // doesn't already exist
        apiStatus = userEntityService.updateSingleton(
            "myGroup",          // Entity type name (all you need for singletons)
            userRefToGroup,     // Entity data to store
            { "other": 0 });    // Keep the object private
        if (apiStatus.status == 200) {
            results.success = true;
            results.message = "Group updated!";
            results.members = group.data.members;
        } else {
            results.success = false;
            results.message = 'Error writing User Entity!';
            results.apiStatus = apiStatus;
        }
    } else {
        results.success = false;
        results.message = 'Error writing Global Entity!';
        results.apiStatus = apiStatus;
    }
} else {
    results.success = false;
    results.message = "Group not found!";
    results.apiStatus = null;
}

results;

//*** ------------- brainCloud meta-data begins now - do not hand-edit -----------------
// "scriptName":"Tut3_JoinGroup",
// "clientCallable":true,
// "s2sCallable":false,
// "peerCallable":false,
// "scriptTimeout":20,
// "description":"",
// "parms":"{\\r\\n  \\\"groupId\\\": \\\"51cd4633-14f1-491e-8aa2-738fd2fae14e\\\",\\r\\n  \\\"memberId\\\": \\\"bd15851e-1c43-4d01-b5af-ede99bfc76ce\\\"\\r\\n}",
// "version":4,
// "updatedAt":1650376124292